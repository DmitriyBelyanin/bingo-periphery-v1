/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MinUUPS, MinUUPSInterface } from "../MinUUPS";

const _abi = [
  {
    inputs: [],
    name: "AddressError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZyAddressNotContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ZyInvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZyNoDelegateCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ZyOnlyProxy",
    type: "error",
  },
  {
    inputs: [],
    name: "ZyUnsupported",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class MinUUPS__factory {
  static readonly abi = _abi;
  static createInterface(): MinUUPSInterface {
    return new utils.Interface(_abi) as MinUUPSInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinUUPS {
    return new Contract(address, _abi, signerOrProvider) as MinUUPS;
  }
}
